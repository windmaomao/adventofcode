const day3States = [3,225,1,225,6,6,1100,1,238,225,104,0,1101,37,34,224,101,-71,224,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1002,113,50,224,1001,224,-2550,224,4,224,1002,223,8,223,101,2,224,224,1,223,224,223,1101,13,50,225,102,7,187,224,1001,224,-224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1101,79,72,225,1101,42,42,225,1102,46,76,224,101,-3496,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1102,51,90,225,1101,11,91,225,1001,118,49,224,1001,224,-140,224,4,224,102,8,223,223,101,5,224,224,1,224,223,223,2,191,87,224,1001,224,-1218,224,4,224,1002,223,8,223,101,4,224,224,1,224,223,223,1,217,83,224,1001,224,-124,224,4,224,1002,223,8,223,101,5,224,224,1,223,224,223,1101,32,77,225,1101,29,80,225,101,93,58,224,1001,224,-143,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1101,45,69,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,226,226,224,102,2,223,223,1005,224,329,101,1,223,223,108,677,226,224,102,2,223,223,1005,224,344,1001,223,1,223,1108,226,677,224,102,2,223,223,1005,224,359,1001,223,1,223,8,677,226,224,102,2,223,223,1006,224,374,1001,223,1,223,107,226,226,224,102,2,223,223,1006,224,389,101,1,223,223,1108,677,226,224,1002,223,2,223,1005,224,404,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,419,101,1,223,223,7,226,677,224,1002,223,2,223,1006,224,434,1001,223,1,223,107,226,677,224,102,2,223,223,1005,224,449,101,1,223,223,1108,677,677,224,1002,223,2,223,1006,224,464,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1007,677,677,224,1002,223,2,223,1005,224,494,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,509,1001,223,1,223,107,677,677,224,102,2,223,223,1006,224,524,1001,223,1,223,8,226,226,224,1002,223,2,223,1005,224,539,1001,223,1,223,1007,677,226,224,102,2,223,223,1006,224,554,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,569,1001,223,1,223,8,226,677,224,1002,223,2,223,1006,224,584,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,599,101,1,223,223,1107,677,226,224,1002,223,2,223,1005,224,614,1001,223,1,223,1107,226,677,224,102,2,223,223,1006,224,629,1001,223,1,223,1008,226,677,224,102,2,223,223,1005,224,644,101,1,223,223,1107,226,226,224,102,2,223,223,1006,224,659,1001,223,1,223,1008,677,677,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226]
// const day3States = [3,3,1105,-1,9,1101,0,0,12,4,12,99,1]
// const day3States = [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]
// const day3States = [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]
const INPUT = 5

// 13294380
const compDayStates = arr => {
  let i = 0
  let done = false

  const val = (dif, flag) => !flag ? 
    arr[arr[i + dif]] : arr[i + dif]

  const sto = (dif, v, flag) => {
    arr[arr[i + dif]] = v
  }

  const inc = (dif, flag) => { 
    i = !flag ? i + dif : dif
  }
  
  const prt = v => { console.log('Output', v) }

  do {
    const op = arr[i]
    console.log('OP', op)
    switch (op) {
        case 1: sto(3, val(1) + val(2)); inc(4); break
        case 2: sto(3, val(1) * val(2)); inc(4); break
        case 3: sto(1, INPUT); inc(2); break
        case 4: prt(val(1)); inc(2); break
        case 5: val(1) ? inc(val(2),1) : inc(3); break
        case 6: !val(1) ? inc(val(2),1) : inc(3); break
        case 7: sto(3, val(1) < val(2) ? 1 : 0); inc(4); break
        case 8: sto(3, val(1) === val(2) ? 1 : 0); inc(4); break
      case 101: sto(3, val(1,1) + val(2)); inc(4); break
      case 102: sto(3, val(1,1) * val(2)); inc(4); break
      case 104: prt(val(1,1)); inc(2); break
      case 105: val(1,1) ? inc(val(2), 1) : inc(3); break
      case 106: !val(1,1) ? inc(val(2), 1) : inc(3); break
      case 107: sto(3, val(1,1) < val(2) ? 1 : 0); inc(4); break
      case 108: sto(3, val(1,1) === val(2) ? 1 : 0); inc(4); break
     case 1001: sto(3, val(1) + val(2,1)); inc(4); break
     case 1002: sto(3, val(1) * val(2,1)); inc(4); break
      case 1005:
        i = val(1) ? val(2, true) : i + 3
        break
      case 1006:
        i = !val(1) ? val(2, true) : i + 3
        break
      case 1007:
        sto(3, val(1) < val(2, true) ? 1 : 0)
        i = i + 4
        break;  
      case 1008:
        sto(3, val(1) === val(2, true) ? 1 : 0)
        i = i + 4
        break;  
      case 1101:
        sto(3, val(1, true) + val(2, true))
        i = i + 4
        break;
      case 1102:
        sto(3, val(1, true) * val(2, true))
        i = i + 4
        break;
      case 1105:
        i = val(1, true) ? val(2, true) : i + 3
        break
      case 1106:
        i = !val(1, true) ? val(2, true) : i + 3
        break
      case 1107:
        sto(3, val(1, true) < val(2, true) ? 1 : 0)
        i = i + 4
        break;
      case 1108:
        sto(3, val(1, true) === val(2, true) ? 1 : 0)
        i = i + 4
        break;  
      default:
      case 99:
        done = true
        break;
    }

    // done = (i >= arr.length) || arr[i] === 99
  } while (!done)
  return arr
}

const day31States = [...day3States]

console.log('Day 3/1 - Comp:', compDayStates(day31States))
